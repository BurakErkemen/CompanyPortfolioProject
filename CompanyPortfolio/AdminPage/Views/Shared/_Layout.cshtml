@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@inject IHttpContextAccessor HttpContextAccessor

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Admin Panel</title>

    <!-- Tek CSS: layout.css -->
    <link rel="stylesheet" href="~/css/layout.css" asp-append-version="true" />
    <link href="~/lib/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark shadow-sm">
        <div class="container-fluid">
            <a class="navbar-brand" href="@Url.Action("Index", "Home")">Admin Panel</a>
            <div class="d-flex align-items-center ms-auto">

                <span class="user-info me-3">👤 @(HttpContextAccessor.HttpContext?.Session.GetString("_UserEmail") ?? "Giriş yapılmamış")</span>
                
                <form method="post" asp-controller="Authentication" asp-action="Logout" class="d-inline">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-outline-light btn-sm">Çıkış</button>
                </form>
            </div>
        </div>
    </nav>

    <div class="container-fluid">
        <div class="row flex-nowrap">
            <!-- Sidebar -->
            <nav class="col-md-2 d-none d-md-block sidebar py-4 px-2">
                <h6>GENEL</h6>
                <ul class="nav flex-column mb-2">
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("Index", "Home")">📊 Dashboard</a>
                    </li>
                </ul>
                <h6>KURUMSAL</h6>
                <ul class="nav flex-column mb-2">
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("Index", "About")">🏢 Hakkımızda</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("Index", "Team")">👥 Ekip</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("Index", "Sss")">❓ S.S.S</a>
                    </li>
                </ul>
                <h6>PORTFÖY</h6>
                <ul class="nav flex-column mb-2">
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("Index", "Project")">📁 Projeler</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("Index", "Service")">🛠️ Hizmetler</a>
                    </li>

                </ul>
                <h6>İLETİŞİM</h6>
                <ul class="nav flex-column mb-2">
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("Index", "Messages")">✉️ Mesajlar</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("Index", "Contact")">📍 İletişim Bilgileri</a>
                    </li>
                </ul>
                <h6>DİĞER</h6>
                <ul class="nav flex-column mb-2">
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("Index", "Gallery")">🖼 Galeri</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("Index", "Slider")">🖼 Slider / Banner</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("Index", "Blog")">📰 Blog</a>
                    </li>
                </ul>
                <h6>AYARLAR</h6>
                <ul class="nav flex-column">
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("Index", "Users")">👤 Kullanıcılar</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("Index", "Seo")">🔍 SEO Ayarları</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("Index", "Settings")">⚙️ Site Ayarları</a>
                    </li>
                </ul>
            </nav>

            <!-- Main Content -->
            <main role="main" class="col-md-10 ms-sm-auto main-content">
                @RenderBody()
            </main>
        </div>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    @RenderSection("Scripts", required: false)


    @{
        var successMessage = TempData["Success"]?.ToString();
        var errorMessage = TempData["Error"]?.ToString();
    }


    <script>
        window.addEventListener("DOMContentLoaded", function () {
            const showToast = (message, type = "success") => {
                const toast = document.createElement("div");
                const bgClass = type === "success" ? "text-bg-success" : "text-bg-danger";
                toast.className = `toast align-items-center ${bgClass} border-0 show position-fixed bottom-0 end-0 m-4`;
                toast.setAttribute("role", "alert");
                toast.setAttribute("aria-live", "assertive");
                toast.setAttribute("aria-atomic", "true");

                toast.innerHTML = `
                    <div class="d-flex">
                        <div class="toast-body">
                            ${message}
                        </div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Kapat"></button>
                    </div>
                `;

                document.body.appendChild(toast);

                setTimeout(() => {
                    toast.classList.remove("show");
                    toast.classList.add("hide");
                    setTimeout(() => toast.remove(), 300);
                }, 5000);
            };

            @* Razor’dan JS'e mesaj geçiyoruz *@
            @if (!string.IsNullOrEmpty(successMessage))
            {
                    <text>
                        showToast(@Html.Raw(Json.Serialize("✅ " + successMessage)), "success");
                    </text>
            }

            @if (!string.IsNullOrEmpty(errorMessage))
            {
                    <text>
                        showToast(@Html.Raw(Json.Serialize("❌ " + errorMessage)), "error");
                    </text>
            }
        });
    </script>

</body>
</html>
